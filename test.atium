export func factorial (count: i32) -> i32 {
	let result: i32 = 1;
	let i: i32 = 0
	while i <= count {
			i = i + 1
			result = result * i
	}
}

export func fibonacci(n: i32) -> i32 {
	if n <= 1 {
		n
	}
	else {
		fibonacci(n - 2) + fibonacci(n - 1)
	}
}

export func point (x: f32, y: f32) -> (f32, f32) {
	(x, y)
}

export func point_x(p: (f32, f32)) -> f32 {
	p.0
}

export func point_y(p: (f32, f32)) -> f32 {
	p.1
}

// import func set_color (r: i32, g: i32, b: i32)
// import func draw_rect (x: f64, y: f64, width: f64, height: f64)

import func log_i32 (v: i32)
import func log_f32 (v: f32)

// func create_color (r: i32, g: i32, b: i32) -> (i32, i32, i32) {
// 	(r,g,b)
//}

// func draw_point (point: (f64, f64), color: (i32, i32, i32)) {
// 	set_color(color.0, color.1, color.2)
// 	draw_rect(point.0 - 0.5, point.2 - 0.5, 1, 1)
// }

export func main () {
	let a = point(16, 81)
	log_f32(a.0)
	log_f32(a.1)
}